/**
 * @file ui.cpp
 * @brief Implements the bridge between the application logic and the generated UI.
 */

#include "ui.h"
#include "ui/ui.h"      // The main header from your EEZ Studio export
#include "ui/screens.h" // Gives access to the global `objects` struct
#include <cstdio>       // For snprintf

// This function is defined in the EEZ-generated ui.c
// Our bridge simply wraps it.
extern void ui_init();

// --- Public API Implementation ---

void ui_bridge_init()
{
    // Call the initializer from the code generated by EEZ Studio.
    // This creates all the screens, widgets, etc.
    ::ui_init();
}

void ui_bridge_update_from_lcnc(const LcncStatusPacket &data)
{
    // This function maps data from the LCNC packet to the correct UI labels.
    // Note: We add checks to ensure the object pointers are not null.

    // Update Status Bar
    if (objects.main_label_feed_value)
    {
        lv_label_set_text_fmt(objects.main_label_feed_value, "%.0f mm/min", data.current_feedrate);
    }
    if (objects.main_label_spindle_value)
    {
        lv_label_set_text_fmt(objects.main_label_spindle_value, "%d rpm", data.spindle_rpm);
    }
    if (objects.main_label_cut_value)
    {
        lv_label_set_text_fmt(objects.main_label_cut_value, "%.0f m/min", data.cutting_speed);
    }

    // Update Overrides Bar
    if (objects.main_label_feed_override_value)
    {
        lv_label_set_text_fmt(objects.main_label_feed_override_value, "%.0f%%", data.feed_override * 100);
    }
    if (objects.main_label_rapids_feed_override_value)
    {
        lv_label_set_text_fmt(objects.main_label_rapids_feed_override_value, "%.0f%%", data.rapid_override * 100);
    }
    if (objects.main_label_spindle_feed_override_value)
    {
        lv_label_set_text_fmt(objects.main_label_spindle_feed_override_value, "%.0f%%", data.spindle_override * 100);
    }

    // Update DRO Positions
    lv_obj_t *dro_value_labels[] = {
        objects.main_label_axis_xvalue, objects.main_label_axis_yvalue, objects.main_label_axis_zvalue,
        objects.main_label_axis_avalue, objects.main_label_axis_bvalue, objects.main_label_axis_cvalue};

    for (int i = 0; i < 6; ++i)
    {
        if (dro_value_labels[i])
        {
            lv_label_set_text_fmt(dro_value_labels[i], "%+.4f", data.dro_pos[i]);
        }
    }
}

void ui_bridge_update_jog_selectors(uint8_t active_axis, uint8_t selected_step)
{
    // Update Jog Step Dropdown
    if (objects.main_dropdown_jogstep)
    {
        lv_dropdown_set_selected(objects.main_dropdown_jogstep, selected_step);
    }

    // Highlight the active DRO axis label (example for X, Y, Z)
    lv_obj_t *dro_name_labels[] = {
        objects.main_label_axis_x, objects.main_label_axis_y, objects.main_label_axis_z,
        objects.main_label_axis_a, objects.main_label_axis_b, objects.main_label_axis_c};

    static lv_style_t style_active_axis;
    static bool style_inited = false;
    if (!style_inited)
    {
        lv_style_init(&style_active_axis);
        lv_style_set_text_color(&style_active_axis, lv_color_hex(0x00FF00)); // Green
        style_inited = true;
    }

    for (int i = 0; i < 6; ++i)
    {
        if (dro_name_labels[i])
        {
            if (i == active_axis)
            {
                lv_obj_add_style(dro_name_labels[i], &style_active_axis, 0);
            }
            else
            {
                lv_obj_remove_style(dro_name_labels[i], &style_active_axis, 0);
            }
        }
    }
}

void ui_bridge_apply_config(const PendantWebConfig &cfg)
{
    // Update the Macros roller from the web configuration
    if (objects.macros_roller)
    {
        std::string roller_options;
        for (size_t i = 0; i < cfg.macros.size(); ++i)
        {
            roller_options += cfg.macros[i].name;
            if (i < cfg.macros.size() - 1)
            {
                roller_options += "\n";
            }
        }
        lv_roller_set_options(objects.macros_roller, roller_options.c_str(), LV_ROLLER_MODE_NORMAL);
    }

    // (Future) Update DRO axis labels, units, etc., from the config
    // For example: lv_label_set_text(objects.main_label_axis_x, cfg.axis_labels[0].c_str());
}